{"version":3,"sources":["Components/FinalImages.js","Components/Pictures.js","Components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["FinalImages","props","useState","IsOpen","setIsOpen","Tempo","setTempo","handleClose","console","log","images","GridList","cols","spacing","map","d","onClick","handleClickOpen","src","server","id","secret","alt","title","Dialog","onClose","open","Button","autoFocus","color","Pictures","Arr","setArr","Temp","setTemp","setOpen","useEffect","abortController","AbortController","signal","fetch","then","res","json","data","stat","photos","photo","catch","err","abort","Search","Tags","setTags","Images","setImages","IsLoading","setIsLoading","a","b","address","className","TextField","placeholder","name","onChange","e","target","value","type","rows","ready","length","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.190374ea.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { GridList } from \"@material-ui/core\";\r\nimport { Dialog } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction FinalImages(props) {\r\n  const [IsOpen, setIsOpen] = useState(false);\r\n  const [Tempo, setTempo] = useState([]);\r\n  const handleClickOpen = (d) => {\r\n    setTempo(d);\r\n    setIsOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {console.log(props.images)}\r\n      <GridList cols={3} spacing={0}>\r\n        {props.images.map((d) => (\r\n          <img\r\n            onClick={() => {\r\n              handleClickOpen(d);\r\n            }}\r\n            key={`${d.id}`}\r\n            src={`https://live.staticflickr.com/${d.server}/${d.id}_${d.secret}.jpg`}\r\n            alt={`${d.title}`}\r\n          ></img>\r\n        ))}\r\n      </GridList>\r\n      <Dialog onClose={handleClose} open={IsOpen}>\r\n        <img\r\n          key={`${Tempo.id}`}\r\n          src={`https://live.staticflickr.com/${Tempo.server}/${Tempo.id}_${Tempo.secret}.jpg`}\r\n          alt={`${Tempo.title}`}\r\n        ></img>\r\n        <Button autoFocus onClick={handleClose} color=\"primary\">\r\n          Close\r\n        </Button>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FinalImages;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { GridList } from \"@material-ui/core\";\r\nimport { Dialog } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction Pictures() {\r\n  const [Arr, setArr] = useState([]);\r\n  const [Temp, setTemp] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = (d) => {\r\n    setTemp(d);\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    const signal = abortController.signal;\r\n\r\n    fetch(\r\n      \"https://www.flickr.com/services/rest/?method=flickr.photos.getRecent&api_key=3737be8cb5f107dcfe786aaa389fc889&format=json&nojsoncallback=1\",\r\n      { signal: signal }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.stat === \"fail\") {\r\n          setArr([]);\r\n        } else if (data.stat === \"ok\") {\r\n          setArr(data.photos.photo);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    return function cleanup() {\r\n      abortController.abort();\r\n    };\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <GridList cols={3} spacing={0}>\r\n        {Arr.map((d) => (\r\n          <img\r\n            onClick={() => {\r\n              handleClickOpen(d);\r\n            }}\r\n            key={`${d.id}`}\r\n            src={`https://live.staticflickr.com/${d.server}/${d.id}_${d.secret}.jpg`}\r\n            alt={`${d.title}`}\r\n          ></img>\r\n        ))}\r\n      </GridList>\r\n      <Dialog onClose={handleClose} open={open}>\r\n        <img\r\n          key={`${Temp.id}`}\r\n          src={`https://live.staticflickr.com/${Temp.server}/${Temp.id}_${Temp.secret}.jpg`}\r\n          alt={`${Temp.title}`}\r\n        ></img>\r\n        <Button autoFocus onClick={handleClose} color=\"primary\">\r\n          Close\r\n        </Button>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pictures;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport \"./Search.css\";\r\nimport ReactPlaceholder from \"react-placeholder\";\r\nimport FinalImages from \"./FinalImages\";\r\nimport Pictures from \"./Pictures\";\r\n\r\nfunction Search() {\r\n  const [Tags, setTags] = useState(\"\");\r\n  const [Images, setImages] = useState([]);\r\n  const [IsLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    console.log(Tags);\r\n    const abortController = new AbortController();\r\n    const signal = abortController.signal;\r\n    async function address() {\r\n      const a = await fetch(\r\n        ` https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=3737be8cb5f107dcfe786aaa389fc889&tags=${Tags}&format=json&nojsoncallback=1`,\r\n        { signal: signal }\r\n      );\r\n      setIsLoading(false);\r\n\r\n      const b = a.json();\r\n      return b;\r\n    }\r\n    address()\r\n      .then((res) => {\r\n        // console.log(res);\r\n        if (res.stat === \"fail\") {\r\n          setImages([]);\r\n        } else if (res.stat === \"ok\") {\r\n          setImages(res.photos.photo);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    return function cleanup() {\r\n      abortController.abort();\r\n    };\r\n  }, [Tags]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"search\">\r\n        <TextField\r\n          placeholder=\" Wanna Search!!\"\r\n          className=\"searchBar\"\r\n          name=\"searchBar\"\r\n          onChange={(e) => {\r\n            setIsLoading(true);\r\n            setTags(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"items\">\r\n        <ReactPlaceholder type=\"media\" rows={20} ready={IsLoading === false}>\r\n          {Images.length > 0 ? <FinalImages images={Images} /> : <Pictures />}\r\n        </ReactPlaceholder>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import \"./App.css\";\nimport Search from \"./Components/Search\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Search />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}